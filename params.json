{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"### Dim - coming soon\r\n\r\nDim will be a simple and easy to use database migration tool. It will be designed to help programmers get their databases under version control, just like their application code. \r\n\r\nDim will be used along side version control tools like Git, Mercurial or Subversion. You choose.\r\n\r\n### How to use\r\n\r\nDim comes will these commands:\r\n\r\n```\r\n$ dim help\r\n\r\nAvailable commands are:\r\n\r\n    backup      - Do a complete backup of the database\r\n    baseline    - Save or execute a \"baseline\" script; used to create a database from scratch\r\n    config      - Edit settings in your Dim config file\r\n    init        - Initialise a new Dim project\r\n    new         - Create a new script for updating your database\r\n    routines    - Save or execute the routines for your database\r\n    update      - Update your database with any changes shared by others\r\n\r\n    help <name> - For help with one of the above commands\r\n```\r\n\r\nCreate a new Dim project:\r\n\r\n```\r\n$ dim init -h localhost -P 3306 -u dim -p dim456 -s dim-tests\r\n\r\n#### Initialising a new Dim project. ####\r\n#\r\n#    New config file created.\r\n#    \\dimconfig.json\r\n#\r\n#    New Dim project initialised!\r\n#\r\n```\r\n\r\nBackup your database at any time:\r\n\r\n```\r\n$ dim backup\r\n\r\n#### Running a complete backup ####\r\n#\r\n#  * New directory created: \\.dim\r\n#  * Tell your version control software to ignore the .dim directory.\r\n#\r\n#  * New directory created: \\.dim\\backups\r\n#\r\n#    Backup completed:\r\n#    \\.dim\\backups\\20121213-634909578024401843.sql\r\n#\r\n```\r\n\r\nCreate a 'baseline' from your database, for other developers to use.\r\n\r\n```\r\n$ dim baseline --save\r\n\r\n#### Saving a new baseline script. ####\r\n#\r\n#  * New directory created: \\dim\\baseline\r\n#\r\n#  * New directory created: \\dim\\routines\r\n#\r\n#    Structure file:\r\n#    \\dim\\baseline\\structure.sql\r\n#\r\n#    Data file:\r\n#    \\dim\\baseline\\data.sql\r\n#\r\n#    Routines file:\r\n#    \\dim\\routines\\routines.sql\r\n#\r\n#    Saved! Now you can share changes with others.\r\n#\r\n```\r\n\r\nCreate a new script (patch) for changes you want to make to your database:\r\n\r\n```\r\n$ dim new --desc=\"update-table\"\r\n\r\n#### Creating a new file ####\r\n#\r\n#  * New directory created: \\dim\\patches\r\n#\r\n#    A new file has been created for you to use. Don't edit after you have shared it with others.\r\n#    \\dim\\patches\\20121213-634909582788484333-update-table.sql\r\n#\r\n```\r\n\r\nUpdate your database with your new patch, or with changes shared by other developers:\r\n\r\n```\r\n$ dim update\r\n\r\n#### Update the local database ####\r\n#\r\n#    1 new patch found.\r\n#    1. \\dim\\patches\\20121213-634909582788484333-update-table.sql\r\n#\r\n#    Backing up database (local backup)\r\n#    Completed backup:\r\n#    \\.dim\\backups\\20121213-634909583053329481.sql\r\n#\r\n#    Executing: \\dim\\patches\\20121213-634909582788484333-update-table.sql\r\n#\r\n#    Update completed.\r\n#\r\n```\r\n\r\nSave your stored routines to a file:\r\n\r\n```\r\n$ dim routines --save\r\n\r\n#### Saving a new routines script. ####\r\n#\r\n#    Routines Saved!\r\n#    \\dim\\routines\\routines.sql\r\n#\r\n```\r\n\r\nExecute changes in your routines.sql file:\r\n\r\n```\r\n$ dim routines --execute\r\n\r\n#### Executing the current routines script. ####\r\n#\r\n#    Backing up existing database first.\r\n#\r\n#    Backup complete:\r\n#    \\.dim\\backups\\20121213-634909583583899828.sql\r\n#\r\n#    Routines script executed!\r\n#\r\n```\r\n\r\nReset your database to the 'baseline':\r\n\r\n```\r\n$ dim baseline --execute\r\n\r\n#### Executing the current baseline script. ####\r\n#\r\n#    Backing up existing database first.\r\n#\r\n#    Backup completed:\r\n#    \\.dim\\backups\\20121213-634909584894474789.sql\r\n#\r\n#    Baseline files executed:\r\n#    \\dim\\baseline\\structure.sql\r\n#    \\dim\\baseline\\data.sql\r\n#\r\n#    Routines file executed:\r\n#    \\dim\\routines\\routines.sql\r\n#\r\n#    1 new patch executed.\r\n#    1. \\dim\\patches\\20121213-634909582788484333-update-table.sql\r\n#\r\n```\r\n\r\nEdit your config settings using 'dim config':\r\n\r\n```\r\n$ dim config -h 127.0.0.1 -P 3307\r\n\r\n#### Setting fields in the local config file ####\r\n#\r\n#    'Host' has been set to '127.0.0.1'\r\n#\r\n#    'Port' has been set to '3307'\r\n#\r\n```\r\n\r\nAn example dimconfig.json file:\r\n\r\n```\r\n{\r\n  \"Host\": \"localhost\",\r\n  \"Port\": \"3306\",\r\n  \"Username\": \"dim\",\r\n  \"Password\": \"dim456\",\r\n  \"Schema\": \"dim-tests\",\r\n  \"MySqlPath\": \"C:\\\\Program Files\\\\MySQL\\\\MySQL Server 5.5\\\\bin\",\r\n  \"Patches\": {\r\n    \"Path\": \"\\\\dim\\\\patches\",\r\n    \"RunKind\": \"RunOnce\"\r\n  },\r\n  \"Routines\": {\r\n    \"Path\": \"\\\\dim\\\\routines\",\r\n    \"RunKind\": \"RunIfChanged\"\r\n  },\r\n  \"Baseline\": {\r\n    \"Path\": \"\\\\dim\\\\baseline\",\r\n    \"RunKind\": \"None\"\r\n  },\r\n  \"CustomFolders\": [\r\n    {\r\n      \"Path\": \"\\\\dim\\\\views\",\r\n      \"RunKind\": \"RunAlways\"\r\n    },\r\n    {\r\n      \"Path\": \"\\\\dim\\\\lookup-data\",\r\n      \"RunKind\": \"RunIfChanged\"\r\n    }\r\n  ]\r\n}\r\n```","name":"Dim","tagline":"the idiots database migration tool"}